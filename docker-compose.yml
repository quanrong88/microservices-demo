version: '2'
services:
  flask-module:
    build: ./flaskModule
    image: flask-module
    container_name: flask-view
    ports:
    - "30:5000"
    volumes:
    - ./flaskModule:/code
    network_mode: "test-network"
    environment:
      BROKER_NAME: "rabbit-broker"
      BROKER_USERNAME: "guest"
      BROKER_PASSWORD: "guest"
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:35
        tag: flask.access
    depends_on:
    - log-module
  rabbit-broker:
    image: rabbitmq:3-management
    container_name: rabbit-broker
    ports:
    - "31:15672"
    hostname: "my-rabbit"
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    network_mode: "test-network"
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:35
        tag: rabbitmq.access
    depends_on:
    - log-module
  base-mysql:
    image: mysql
    container_name: base-mysql
    network_mode: "test-network"
    ports:
    - "32:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "quan"
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:35
        tag: mysql.access
    depends_on:
    - log-module
  user-module:
    build: ./userModule
    image: user-module
    container_name: user-module
    network_mode: "test-network"
    volumes:
    - ./userModule:/code
    command: bash -c "chmod +x wait-for-it.sh && ./wait-for-it.sh rabbit-broker:31 -- nameko run service --broker amqp://guest:guest@rabbit-broker"
    depends_on:
    - rabbit-broker
    - base-mysql
    - log-module
    environment:
      MYSQL_SERVER: "base-mysql"
      MYSQL_DATABASE: "demodb"
      MYSQL_USERNAME: "root"
      MYSQL_PASSWORD: "quan"
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:35
        tag: users.access
  movie-module:
    build: ./moviesModule
    image: movie-module
    container_name: movie-module
    network_mode: "test-network"
    volumes:
    - ./moviesModule:/code
    command: bash -c "chmod +x wait-for-it.sh && ./wait-for-it.sh rabbit-broker:31 -- nameko run service --broker amqp://guest:guest@rabbit-broker"
    depends_on:
    - rabbit-broker
    - base-mysql
    - log-module
    environment:
      MYSQL_SERVER: "base-mysql"
      MYSQL_DATABASE: "demodb"
      MYSQL_USERNAME: "root"
      MYSQL_PASSWORD: "quan"
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:35
        tag: movies.access
  booking-module:
    build: ./bookingsModule
    image: booking-module
    container_name: booking-module
    network_mode: "test-network"
    volumes:
    - ./bookingsModule:/code
    command: bash -c "chmod +x wait-for-it.sh && ./wait-for-it.sh rabbit-broker:31 -- nameko run service --broker amqp://guest:guest@rabbit-broker"
    depends_on:
    - rabbit-broker
    - base-mysql
    - log-module
    environment:
      MYSQL_SERVER: "base-mysql"
      MYSQL_DATABASE: "demodb"
      MYSQL_USERNAME: "root"
      MYSQL_PASSWORD: "quan"
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:35
        tag: bookings.access
  log-module:
    build: ./fluentd
    image: my-fluentd
    container_name: log-module
    network_mode: "test-network"
    ports:
    - "35:24224"
    - "35:24224/udp"
    volumes:
    - ./fluentd:/fluentd/etc
    environment:
      FLUENTD_CONF: "fluentd.conf"
    depends_on:
    - search-module
  search-module:
    image: elasticsearch
    container_name: search-module
    network_mode: "test-network"
    ports:
    - "33:9200"
    - "34:9300"
    environment:
      discovery.type: "single-node"
  kibana-module:
    image: kibana
    container_name: kibana-module
    network_mode: "test-network"
    ports:
    - "36:5601"
    environment:
      ELASTICSEARCH_URL: "http://search-module:9200"
    depends_on:
    - search-module
